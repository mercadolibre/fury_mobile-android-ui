####
# Default job.
# This job simply defines the android image, some environment variables
# and stuff that all jobs should have
##
default: &defaultJob
  # The docker image all jobs that inherit from us will have (Which should be all of them)
  docker:
    - image: circleci/android@sha256:42812778b27d4b30a2e1d0e0c61de373f0d2bed7a53d5df03199f2115259cee6

##
# We define a job for building. This job will be in charge of running:
# - Run code analysis for a specific module
# - Run tests for a specific module
# - Run an assemble for a specific module
##
build-job: &buildJob
  # It will inherit the defaultJob.
  <<: *defaultJob
  steps:
      # Checkout to our repo and add the ssh keys for doing git stuff
      - checkout
      - add_ssh_keys
      - restore_cache:
          key: buildscript-{{ checksum "build.gradle" }}
      - restore_cache:
          key: gradlew-{{ checksum "./gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: dependencies-{{ checksum "exampleApp/build.gradle" }}-{{ checksum "ui/build.gradle" }}-{{ checksum "ui_legacy/build.gradle" }}
      - run:
          name: Run Code Analysis
          command: ./gradlew $MODULE:check -x test
      - run:
          name: Run Tests
          command: |
            ./gradlew $MODULE:testReleaseUnitTest
            ./gradlew $MODULE:jacocoTestReleaseUnitTestReport
            bash <(curl -s https://codecov.io/bash) -t $CODECOV_REPO_TOKEN
      - run:
          name: Run Assemble
          command: ./gradlew $MODULE:assembleRelease
      # Save the cache for this build.gradle
      - save_cache:
          paths:
          - ~/.gradle
          key: buildscript-{{ checksum "build.gradle" }}
      - save_cache:
          paths:
          - ./gradle
          key: gradlew-{{ checksum "./gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
          - ./.gradle
          - ~/.android/build-cache/
          key: dependencies-{{ checksum "exampleApp/build.gradle" }}-{{ checksum "ui/build.gradle" }}-{{ checksum "ui_legacy/build.gradle" }}
##
# We define a job for deploying. This job will be in charge of running:
# - Run deploy of a lib as release
##
deploy-release-job: &deployReleaseJob
  <<: *defaultJob
  steps:
      # Checkout to our repo and add the ssh keys for doing git stuff
      - checkout
      - add_ssh_keys
      - run:
          name: Run Deploy
          command: ./gradlew assembleRelease publish --no-build-cache --rerun-tasks -x exampleApp:assembleRelease
##
# We define our default workflow
# This workflow will be used by our default builds
# The following workflow runs on every branch except master or release/?
##
default-workflow: &defaultWorkflow
  filters:
    branches:
      ignore:
        - master
        - /release\/.*$/
deploy-release-workflow: &deployReleaseWorkflow
  filters:
    branches:
      only:
        - /release\/.*$/
##
# Create our jobs, making them inherit from the defined jobs
# The ones that will inherit from buildJob need to create the environment variable
# MODULE. Check the steps defined for that job so you understand why :)
##
version: 2
jobs:
  ui:
    <<: *buildJob
    environment:
      MODULE: ui
  ui_legacy:
    <<: *buildJob
    environment:
      MODULE: ui_legacy
  exampleApp:
    <<: *buildJob
    environment:
      MODULE: exampleApp
  deploy:
    <<: *deployReleaseJob
##
# We define here workflows. We will add all our jobs
# to a common workflow, and for each job of the workflow we will make it
# inherit its properties from a specific workflow
##
workflows:
  version: 2
  build-test-deploy:
    jobs:
      - ui:
          <<: *defaultWorkflow
      - ui_legacy:
          <<: *defaultWorkflow
      - exampleApp:
          <<: *defaultWorkflow
      - deploy:
          <<: *deployReleaseWorkflow
